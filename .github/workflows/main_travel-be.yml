name: Build and deploy Node.js app to Azure Web App

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      SERVER_PORT: ${{ secrets.SERVER_PORT }}
      DB_URI: ${{ secrets.DB_URI }}
      TOURAPI_KEY: ${{ secrets.TOURAPI_KEY }}
      GPT_URI: ${{ secrets.GPT_URI }}
      AZURE_AI_KEY: ${{ secrets.AZURE_AI_KEY }}
      ACCESS_SECRET_KEY: ${{ secrets.ACCESS_SECRET_KEY }}
      REFRESH_SECRET_KEY: ${{ secrets.REFRESH_SECRET_KEY }}

    steps:
      # 1. Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2. Set up Node.js environment
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20.x'

      # 3. Install dependencies
      - name: Install dependencies
        run: npm install

      # 4. Build the project (if needed, otherwise can be skipped)
      - name: Build project
        run: |
          npm run build --if-present

      # 5. Generate .env file for environment variables
      - name: Create .env file
        run: |
          echo "SERVER_PORT=${{ secrets.SERVER_PORT }}" >> .env
          echo "DB_URI=${{ secrets.DB_URI }}" >> .env
          echo "TOURAPI_KEY=${{ secrets.TOURAPI_KEY }}" >> .env
          echo "GPT_URI=${{ secrets.GPT_URI }}" >> .env
          echo "AZURE_AI_KEY=${{ secrets.AZURE_AI_KEY }}" >> .env
          echo "ACCESS_SECRET_KEY=${{ secrets.ACCESS_SECRET_KEY }}" >> .env
          echo "REFRESH_SECRET_KEY=${{ secrets.REFRESH_SECRET_KEY }}" >> .env

      # 6. Upload artifact (optional for manual deployment or debug purposes)
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-build
          path: .

  deploy:
    runs-on: ubuntu-latest
    needs: build

    permissions:
      id-token: write
      contents: read

    steps:
      # 1. Login to Azure
      - name: Azure login
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID }}
        env:
          ACTIONS_STEP_DEBUG: true
          ACTIONS_RUNNER_DEBUG: true

      # 2. Deploy to Azure Web App
      - name: Deploy to Azure Web App
        uses: azure/webapps-deploy@v3
        with:
          app-name: 'travel-be'
          package: .
